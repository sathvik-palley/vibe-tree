name: CI

on:
  push:
    branches: [ main, develop, add-workflow-build ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages (core and ui)
      run: pnpm build:deps
    
    - name: Typecheck
      run: pnpm typecheck
    
    - name: Lint
      run: pnpm lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages (core and ui)
      run: pnpm build:deps
    
    - name: Run unit tests
      run: pnpm test:run
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: |
          **/coverage/
          **/test-results/
        retention-days: 7

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    needs: [lint-and-typecheck, unit-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python (for node-gyp)
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages (core and ui)
      run: pnpm build:deps
    
    - name: Build all
      run: pnpm build
    
    - name: Build web app
      run: pnpm --filter @vibetree/web build
    
    - name: Build server
      run: pnpm --filter @vibetree/server build
      
    - name: Build desktop app
      run: pnpm --filter @vibetree/desktop build

  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python (for node-gyp)
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages (core and ui)
      run: pnpm build:deps
    
    - name: Build all
      run: pnpm build
    
    - name: Build web app
      run: pnpm --filter @vibetree/web build
    
    - name: Build server
      run: pnpm --filter @vibetree/server build
      
    # Skip desktop app build on Linux due to potential GUI dependencies

  build-macos:
    name: Build (macOS)
    runs-on: macos-latest
    needs: [lint-and-typecheck, unit-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python (for node-gyp)
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages (core and ui)
      run: pnpm build:deps
    
    - name: Build all
      run: pnpm build
    
    - name: Build web app
      run: pnpm --filter @vibetree/web build
    
    - name: Build server
      run: pnpm --filter @vibetree/server build
      
    - name: Build desktop app
      run: pnpm --filter @vibetree/desktop build

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.49.1-noble
      options: --user root

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install build dependencies
      run: |
        apt-get update
        apt-get install -y python3-setuptools python3-dev build-essential xvfb

    - name: Setup pnpm
      run: npm install -g pnpm@8.14.0

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build dependencies
      run: pnpm build:deps

    - name: Build desktop app
      run: pnpm --filter @vibetree/desktop build

    - name: Compile test main file
      run: |
        cd apps/desktop
        npx tsc src/main/test-index.ts --outDir dist/main --target es2020 --module commonjs --esModuleInterop --allowSyntheticDefaultImports --resolveJsonModule

    - name: Fix Electron installation
      run: |
        # Find and fix Electron installation
        ELECTRON_DIR=$(find node_modules/.pnpm -maxdepth 2 -name "electron@*" -type d | head -1)
        if [ -n "$ELECTRON_DIR" ]; then
          cd "$ELECTRON_DIR/node_modules/electron"
          rm -rf dist
          npm run postinstall
        fi

    - name: Run e2e tests
      run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- pnpm --filter @vibetree/desktop exec playwright test --reporter=list
      env:
        CI: true
        DISPLAY: ':99.0'
        ELECTRON_DISABLE_SANDBOX: 1

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-results-linux
        path: apps/desktop/test-results/
        retention-days: 7

    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-linux
        path: apps/desktop/playwright-report/
        retention-days: 7

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-screenshots-linux
        path: apps/desktop/*.png
        retention-days: 7
