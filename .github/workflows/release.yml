name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            platform: mac
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Clean pnpm cache
        run: pnpm store prune

      - name: Install setuptools for Python (macOS)
        if: matrix.os == 'macos-latest'
        run: pip install setuptools

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        timeout-minutes: 10

      - name: Build
        run: pnpm build
        timeout-minutes: 10

      - name: Rebuild native dependencies
        run: |
          npx electron-rebuild
        shell: bash

      - name: Build executables
        run: pnpm package:desktop
        timeout-minutes: 20

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-executables
          path: |
            release/*.dmg
            release/*.AppImage
            release/*.exe
            release/*.deb
            release/*.rpm
            release/*.zip
            release/*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mac-executables/*
            linux-executables/*
            win-executables/*
          draft: true
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}